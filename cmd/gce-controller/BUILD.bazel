load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "sigs.k8s.io/cluster-api-provider-gcp/cmd/gce-controller",
    visibility = ["//visibility:private"],
    deps = [
        "//cmd/gce-controller/cluster-controller-app:go_default_library",
        "//cmd/gce-controller/cluster-controller-app/options:go_default_library",
        "//cmd/gce-controller/machine-controller-app:go_default_library",
        "//cmd/gce-controller/machine-controller-app/options:go_default_library",
        "//vendor/github.com/spf13/pflag:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/util/logs:go_default_library",
        "//vendor/sigs.k8s.io/cluster-api/pkg/controller/config:go_default_library",
    ],
)

go_binary(
    name = "gce-controller",
    embed = [":go_default_library"],
    # pure is the equivalent of CGO_ENABLED=0 and means we don't depend on libstdc++
    pure = "on",
    # static means we don't depend on libc
    static = "on",
    visibility = ["//visibility:public"],
)

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
    "container_push",
)

container_image(
    name = "image-gce-controller",
    base = "@go_base//image",
    cmd = ["/gce-controller"],
    files = [":gce-controller"],
)

container_push(
    name = "push-image-gce-controller",
    format = "Docker",
    image = ":image-gce-controller",
    registry = "gcr.io",
    repository = "justinsb-cloud-kubernetes-test/machine-controller-gcp",
    tag = "latest",
)
